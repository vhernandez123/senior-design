{"version":3,"file":"static/js/593.97b8d95d.chunk.js","mappings":"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","sources":["components/HomeTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  TextField,\n} from \"@mui/material\";\n\nconst DataTable = () => {\n  const [rows, setRows] = useState([]);\n  const { user, getIdTokenClaims } = useAuth0();\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (user) {\n          const idToken = await getIdTokenClaims();\n          setUserId(idToken[\"https://example.com/userId\"]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user ID:\", error);\n      }\n    };\n\n    fetchUserId();\n  }, [getIdTokenClaims, user]);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user && userId) {\n        try {\n          const response = await Axios.get(\n            `http://localhost:4000/GetAllPetsID/${userId}`\n          );\n          // console.log(response.data);\n          setRows(response.data);\n        } catch (error) {\n          console.error(\"Error finding pet info for this owner:\", error);\n        }\n      }\n    };\n\n    fetchData();\n  }, [userId, user]);\n\n  const handleRemovePet = (index, petID) => {\n    Axios.delete(`http://localhost:4000/RemovePet/${petID}`)\n      .then((response) => {\n        const updatedRows = [...rows];\n        updatedRows.splice(index, 1);\n        setRows(updatedRows);\n      })\n      .catch((error) => {\n        console.error(\"Error removing pet:\", error);\n      });\n  };\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        maxWidth: \"90%\",\n        maxHeight: \"100%\",\n        margin: \"auto\",\n        backgroundColor: \"rgba(136, 206, 146, 0.90)\",\n      }}\n    >\n      <Table size=\"medium\" className=\"custom-table\">\n        <TableHead>\n          <TableRow className=\"table-header-row\">\n            <TableCell className=\"table-header-cell\">Name</TableCell>\n            <TableCell className=\"table-header-cell\">Breed</TableCell>\n            <TableCell className=\"table-header-cell\">Age</TableCell>\n            <TableCell className=\"table-header-cell\">Color</TableCell>\n            <TableCell className=\"table-header-cell\">Weight</TableCell>\n            <TableCell className=\"table-header-cell\">\n              Microchip Number\n            </TableCell>\n            <TableCell className=\"table-header-cell\">Gender</TableCell>\n            <TableCell className=\"table-header-cell\" colSpan={2}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <TableRow key={index} className=\"table-row\">\n              <TableCell className=\"table-cell\">{row.petName}</TableCell>\n              <TableCell className=\"table-cell\">{row.petBreed}</TableCell>\n              <TableCell className=\"table-cell\">{row.petAge}</TableCell>\n              <TableCell className=\"table-cell\">{row.petColor}</TableCell>\n              <TableCell className=\"table-cell\">{row.petWeight}</TableCell>\n              <TableCell className=\"table-cell\">\n                {row.petMicrochipNum}\n              </TableCell>\n              <TableCell className=\"table-cell\">{row.petGender}</TableCell>\n              <TableCell className=\"table-cell\" colSpan={2}>\n                <Button\n                  variant=\"contained\"\n                  className=\"custom-button\"\n                  style={{\n                    backgroundColor: \"#01B636\",\n                    color: \"white\",\n                    marginRight: \"10px\",\n                  }}\n                  onClick={() => handleRemovePet(index, row.petID)}\n                >\n                  Remove\n                </Button>\n                <Link to={`/pet/${row.petID}`}>\n                  <Button\n                    variant=\"contained\"\n                    className=\"custom-button\"\n                    style={{\n                      backgroundColor: \"#01B636\",\n                      color: \"white\",\n\n                      marginLeft: \"10px\",\n                    }}\n                  >\n                    View Pet\n                  </Button>\n                </Link>\n                <Link to={`/EditPet/${row.petID}`}>\n                  <Button\n                    variant=\"contained\"\n                    className=\"custom-button\"\n                    style={{\n                      backgroundColor: \"#01B636\",\n                      color: \"white\",\n                      marginLeft: \"10px\",\n                    }}\n                  >\n                    Edit Pet\n                  </Button>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Button\n        component={Link}\n        to=\"/AddPet\"\n        variant=\"contained\"\n        className=\"custom-button custom-table\"\n        style={{ margin: \"1rem\", backgroundColor: \"#01B636\", color: \"white\" }}\n      >\n        Add New Pet\n      </Button>\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n"],"names":["_useState","useState","_useState2","_slicedToArray","rows","setRows","_useAuth","useAuth0","user","getIdTokenClaims","_useState3","_useState4","userId","setUserId","useEffect","fetchUserId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","idToken","wrap","_context","prev","next","sent","t0","console","error","stop","apply","arguments","fetchData","_ref2","_callee2","response","_context2","Axios","get","concat","data","_jsxs","TableContainer","component","Paper","style","maxWidth","maxHeight","margin","backgroundColor","children","Table","size","className","_jsx","TableHead","TableRow","TableCell","colSpan","TableBody","map","row","index","petName","petBreed","petAge","petColor","petWeight","petMicrochipNum","petGender","Button","variant","color","marginRight","onClick","petID","delete","then","updatedRows","_toConsumableArray","splice","catch","handleRemovePet","Link","to","marginLeft"],"sourceRoot":""}