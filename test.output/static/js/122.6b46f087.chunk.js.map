{"version":3,"file":"static/js/122.6b46f087.chunk.js","mappings":"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","sources":["components/logout.js","components/navbar.js","pages/LoggingForms.js"],"sourcesContent":["// Val slightly changed this on 12/1\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { left } from \"@popperjs/core\";\n\nconst LogoutButton = () => {\n  const { logout, isAuthenticated } = useAuth0();\n  const directToLogin = () => {\n    window.location.href = `${window.location.origin}`;\n  };\n  return (\n    <>\n      {isAuthenticated ? (\n        <button\n          style={{\n            padding: \"5px\",\n            paddingLeft:'10px',\n            paddingRight:'10px',\n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            backgroundColor: \"gold\",\n            borderRadius:'50%',\n            marginLeft:\"20px\"\n          }}\n          onClick={logout}\n        >\n          Log\n          <br></br>\n          out\n        </button>\n      ) : (\n        <button\n          style={{\n            padding: \"5px\",\n            paddingLeft:'10px',\n            paddingRight:'10px',\n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            backgroundColor: \"gold\",\n            borderRadius:'50%',\n            marginLeft:\"20px\"\n          }}\n          onClick={directToLogin}\n        >\n          Log <br></br>in\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport \"../css/Navbar.css\"; // Import your CSS file\nimport { Button } from \"@mui/material\";\nimport LogoutButton from \"../components/logout.js\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        <a href=\"/home\" className=\"navbar-logo\">\n          <h2>Pet Logger</h2>\n        </a>\n        <ul className=\"nav-menu\">\n          <li className=\"nav-item\">\n            <Button\n              style={{ color: \"white\" }}\n              href=\"/Checklist\"\n              className=\"nav-links\"\n            >\n              Pet Errands todo\n            </Button>\n          </li>\n          <li className=\"nav-item\">\n            <Button\n              style={{ color: \"white\" }}\n              href=\"/VetFinder\"\n              className=\"nav-links\"\n            >\n              Find Vets Near You\n            </Button>\n          </li>\n          <li className=\"nav-item\">\n            <Button\n              style={{ color: \"white\" }}\n              href=\"/aboutUs\"\n              className=\"nav-links\"\n            >\n             About Us\n            </Button>\n          </li>\n      <li>\n      <LogoutButton />\n      </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"../css/PetDetails.css\";\nimport Navbar from \"../components/navbar\";\nimport { Button } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport jsPDF from \"jspdf\";\n\nconst LoggingForms = () => {\n  const { petID, logsID } = useParams();\n  const [userID, setUserId] = useState(null);\n  const { user, getIdTokenClaims } = useAuth0();\n  const [petDetails, setPetDetails] = useState({});\n  const [petLogs, setPetLogs] = useState([]);\n  const [foodLogs, setFoodLogs] = useState([]);\n  const [bathroomLogs, setBathroomLogs] = useState([]);\n  const [medicationLogs, setMedicationLogs] = useState([]);\n  const [behaviorLogs, setPetBehaviorLogs] = useState([]);\n\n  const formatLogDate = (logDate) => {\n    const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n    return new Date(logDate).toLocaleDateString(undefined, options);\n  };\n\n  const handleExportToPdf = () => {\n    const {\n      petName,\n      petBreed,\n      petAge,\n      petColor,\n      petWeight,\n      petMicrochipNum,\n      petGender,\n    } = petDetails;\n    const currentDate = new Date().toLocaleDateString();\n\n    const formattedLogs = {\n      petLogs: petLogs.map((log) => ({\n        logEntry: log.logEntry,\n        logDate: formatLogDate(log.logDate),\n      })),\n      foodLogs: foodLogs.map((foodDetails) => ({\n        foodEntry: `Ate ${foodDetails.foodAmount} ${foodDetails.foodUnit} of ${\n          foodDetails.foodType\n        }. Drank ${foodDetails.foodWater} times. ${\n          foodDetails.foodDanger === \"yes\"\n            ? `Ate something bad: ${foodDetails.foodDangerDescription}`\n            : \"Did not eat something bad\"\n        }`,\n      })),\n      bathroomLogs: bathroomLogs.map((bathroomLog) => ({\n        bathroomEntry: `Used Bathroom ${bathroomLog.bathroomNumber} times. Poop Description: ${bathroomLog.bathroomPoop}. Urine Description: ${bathroomLog.bathroomUrine}. Vomit Count: ${bathroomLog.bathroomVomit}`,\n      })),\n      behaviorLogs: behaviorLogs.map((behaviorLog) => ({\n        behaviorEntry: `Current Activity: ${\n          behaviorLog.behaviorActivity || \"N/A\"\n        }. Any signs of aggression: ${\n          behaviorLog.behaviorAggression === \"yes\" ? \"Yes\" : \"No\"\n        }. Behavior Changes: ${behaviorLog.behaviorChanges || \"\"}`,\n      })),\n      medicationLogs: medicationLogs.map((medicationLog) => ({\n        medicationEntry: `Takes ${medicationLog.medicationDosage} of ${\n          medicationLog.medicationName\n        } for ${medicationLog.medicationDuration} days. Instructions: ${\n          medicationLog.medicationInstructions || \"No instructions provided.\"\n        }`,\n      })),\n    };\n\n    const pdf = new jsPDF();\n    const margin = 15;\n    let yPosition = margin;\n\n    const addText = (text, color = \"#000000\", fontSize = 12) => {\n      pdf.setFontSize(fontSize);\n      pdf.setTextColor(color);\n\n      const margin = 10;\n      const pageWidth = pdf.internal.pageSize.width;\n      const remainingWidth = pageWidth - margin * 2;\n\n      const lines = pdf.splitTextToSize(text ?? \"N/A\", remainingWidth);\n      const lineHeight = fontSize / pdf.internal.scaleFactor;\n\n      for (let i = 0; i < lines.length; i++) {\n        if (yPosition + lineHeight > pdf.internal.pageSize.height - margin) {\n          pdf.addPage();\n          yPosition = margin;\n        }\n\n        pdf.text(margin, yPosition, lines[i]);\n        yPosition += lineHeight;\n      }\n    };\n\n    addText(`Name: ${petName}`);\n    addText(`Breed: ${petBreed || \"N/A\"}`);\n    addText(`Gender: ${petGender || \"N/A\"}`);\n    addText(`Age: ${petAge || \"N/A\"}`);\n    addText(`Color: ${petColor || \"N/A\"}`);\n    addText(`Weight: ${petWeight || \"N/A\"}`);\n    addText(`Microchip Number: ${petMicrochipNum || \"N/A\"}`);\n    addText(`Date Of Log: ${currentDate}`);\n    yPosition += 10;\n\n    addText(\"Daily Log\", \"#01B636\", 16);\n    formattedLogs.petLogs.forEach((log) =>\n      addText(`${log.logDate}: ${log.logEntry || \"No entry for this date.\"}`)\n    );\n    yPosition += 10;\n\n    addText(\"Food Logs\", \"#01B636\", 16);\n    formattedLogs.foodLogs.forEach((foodLog) => {\n      addText(foodLog.foodEntry);\n    });\n    yPosition += 10;\n\n    addText(\"Bathroom/Illness Logs\", \"#01B636\", 16);\n    formattedLogs.bathroomLogs.forEach((bathroomLog) => {\n      addText(bathroomLog.bathroomEntry);\n    });\n    yPosition += 10;\n\n    addText(\"Behavior Logs\", \"#01B636\", 16);\n    formattedLogs.behaviorLogs.forEach((behaviorLog) => {\n      addText(behaviorLog.behaviorEntry);\n    });\n    yPosition += 10;\n\n    addText(\"Medication Logs\", \"#01B636\", 16);\n    formattedLogs.medicationLogs.forEach((medicationLog) => {\n      addText(medicationLog.medicationEntry);\n    });\n    yPosition += 10;\n\n    pdf.save(`pet_data_${petName}_${currentDate}.pdf`);\n  };\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (user) {\n          const idToken = await getIdTokenClaims();\n          setUserId(idToken[\"https://example.com/userId\"]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user ID:\", error);\n      }\n    };\n\n    fetchUserId();\n  }, [getIdTokenClaims, user]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const petDetailsResponse = await Axios.get(\n          `http://localhost:4000/GetPet/${petID}`\n        );\n        const petLogsResponse = await Axios.get(\n          `http://localhost:4000/GetLog/${logsID}`\n        );\n\n        const bathroomLogsResponse = await Axios.get(\n          `http://localhost:4000/GetBathroomDetailsbyLogID/${logsID}`\n        );\n        const foodLogsResponse = await Axios.get(\n          `http://localhost:4000/GetFoodLogsByLogID/${logsID}`\n        );\n        const behaviorLogsResponse = await Axios.get(\n          `http://localhost:4000/GetBehaviorDetailsbyLogID/${logsID}`\n        );\n        const medicationLogsResponse = await Axios.get(\n          `http://localhost:4000/GetMedicationDetailsbyLogID/${logsID}`\n        );\n\n        setPetDetails(petDetailsResponse.data);\n        setBathroomLogs(bathroomLogsResponse.data);\n        setPetBehaviorLogs(behaviorLogsResponse.data);\n        setMedicationLogs(medicationLogsResponse.data);\n        setPetLogs(petLogsResponse.data);\n        setFoodLogs(foodLogsResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        console.log(logsID);\n      }\n    };\n\n    fetchData();\n  }, [petID, logsID]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"pet-details-container\">\n        <div className=\"pet-info\">\n          <h2 className=\"pet-name\">{petDetails.petName}</h2>\n          <br />\n          <br />\n          <h4>Export info to PDF</h4>\n          <Button\n            variant=\"contained\"\n            className=\"custom-button\"\n            style={{ backgroundColor: \"#01B636\", color: \"white\" }}\n            onClick={handleExportToPdf}\n          >\n            Export to PDF\n          </Button>\n        </div>\n      </div>\n      <div className=\"pet-details-container-forms1\">\n        <h3>What has your pet eaten today?</h3>\n        <Link to={`/log-food/${logsID}/${petID}`}>\n          <Button\n            variant=\"contained\"\n            className=\"pet-details-item \"\n            style={{\n              backgroundColor: \"#01B636\",\n              color: \"white\",\n              margin: \"10px\",\n            }}\n          >\n            Log Food\n          </Button>\n        </Link>\n        <br />\n        <br />\n        <h3>Concerned about your pet?</h3>\n        <Link to={`/UpdateBathroom/${logsID}/${petID}`}>\n          <Button\n            variant=\"contained\"\n            className=\"pet-details-item \"\n            style={{\n              backgroundColor: \"#01B636\",\n              color: \"white\",\n              margin: \"10px\",\n            }}\n          >\n            Click Here\n          </Button>\n        </Link>\n        <br />\n        <br />\n        <h3>Does your pet take any medication?</h3>\n        <Link to={`/LogMedication/${logsID}/${petID}`}>\n          <Button\n            variant=\"contained\"\n            className=\"pet-details-item \"\n            style={{\n              backgroundColor: \"#01B636\",\n              color: \"white\",\n              margin: \"10px\",\n            }}\n          >\n            Log it Here\n          </Button>\n        </Link>\n      </div>\n      <div className=\"pet-details-container logsAppear1\">\n        <div className=\"pet-logs-container logsApp\">\n          <div className=\"pet-logs notepad\">\n            <div className=\"log-box\">\n              <h3>Daily log for {petDetails.petName}</h3>\n              <ul>\n                {petLogs.map((log) => (\n                  <li key={log.logsId}>{log.logEntry}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"pet-logs notepad\">\n            <div className=\"log-box\">\n              <h3>Food logs for {petDetails.petName}</h3>\n              <ul>\n                {foodLogs.map((foodDetails) => (\n                  <li key={foodDetails.foodID}>\n                    Ate {foodDetails.foodAmount}\n                    {\"\"}\n                    {foodDetails.foodUnit} {\"\"}\n                    of {foodDetails.foodType}. Drank {foodDetails.foodWater}{\" \"}\n                    times.\n                    {foodDetails.foodDanger === \"yes\" ? (\n                      <span>\n                        {\" \"}\n                        Ate something bad: {foodDetails.foodDangerDescription}\n                      </span>\n                    ) : (\n                      <span> Did not eat something bad</span>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"pet-logs-container logsAppear\">\n          <div className=\"pet-logs notepad\">\n            <div className=\"log-box\">\n              <h3>Bathroom/Illness logs for {petDetails.petName}</h3>\n              <ul>\n                {bathroomLogs.map((bathroomLog) => (\n                  <li key={bathroomLog.bathroomID}>\n                    <p>\n                      Used Bathroom {bathroomLog.bathroomNumber} times. Poop\n                      Description: {bathroomLog.bathroomPoop}. Urine\n                      Description: {bathroomLog.bathroomUrine}. Vomit Count:{\" \"}\n                      {bathroomLog.bathroomVomit}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"pet-logs notepad\">\n            <div className=\"log-box\">\n              <h3>Behavior logs for {petDetails.petName}</h3>\n              <ul>\n                {behaviorLogs.map((behaviorLog) => (\n                  <li key={behaviorLog.behaviorID}>\n                    <p>\n                      Current Activity: {behaviorLog.behaviorActivity}, Any\n                      signs of aggression:{\" \"}\n                      {behaviorLog.behaviorAggression === \"yes\" ? \"Yes\" : \"No\"},\n                      Behavior Changes: {behaviorLog.behaviorChanges}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"pet-logs-container meds\">\n        <div className=\"pet-logs notepad\">\n          <div className=\"log-box\">\n            <h3>Medication logs for {petDetails.petName}</h3>\n            <ul>\n              {medicationLogs.map((medicationLog) => (\n                <li key={medicationLog.medicationLogId}>\n                  Takes {medicationLog.medicationDosage} of{\" \"}\n                  {medicationLog.medicationName} for{\" \"}\n                  {medicationLog.medicationDuration} days. Instructions:\n                  {medicationLog.medicationInstructions}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoggingForms;\n"],"names":["_useAuth","useAuth0","logout","isAuthenticated","_jsx","_Fragment","children","_jsxs","style","padding","paddingLeft","paddingRight","cursor","fontSize","backgroundColor","borderRadius","marginLeft","onClick","window","location","href","concat","origin","className","Button","color","LogoutButton","_useParams","useParams","petID","logsID","_useState","useState","_useState2","_slicedToArray","setUserId","user","getIdTokenClaims","_useState3","_useState4","petDetails","setPetDetails","_useState5","_useState6","petLogs","setPetLogs","_useState7","_useState8","foodLogs","setFoodLogs","_useState9","_useState10","bathroomLogs","setBathroomLogs","_useState11","_useState12","medicationLogs","setMedicationLogs","_useState13","_useState14","behaviorLogs","setPetBehaviorLogs","useEffect","fetchUserId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","idToken","wrap","_context","prev","next","sent","t0","console","error","stop","apply","arguments","fetchData","_ref2","_callee2","petDetailsResponse","petLogsResponse","bathroomLogsResponse","foodLogsResponse","behaviorLogsResponse","medicationLogsResponse","_context2","Axios","get","data","log","Navbar","petName","variant","petBreed","petAge","petColor","petWeight","petMicrochipNum","petGender","currentDate","Date","toLocaleDateString","formattedLogs","map","logEntry","logDate","undefined","year","month","day","foodDetails","foodEntry","foodAmount","foodUnit","foodType","foodWater","foodDanger","foodDangerDescription","bathroomLog","bathroomEntry","bathroomNumber","bathroomPoop","bathroomUrine","bathroomVomit","behaviorLog","behaviorEntry","behaviorActivity","behaviorAggression","behaviorChanges","medicationLog","medicationEntry","medicationDosage","medicationName","medicationDuration","medicationInstructions","pdf","jsPDF","yPosition","addText","text","length","setFontSize","setTextColor","remainingWidth","internal","pageSize","width","margin","lines","splitTextToSize","lineHeight","scaleFactor","i","height","addPage","forEach","foodLog","save","Link","to","logsId","foodID","bathroomID","behaviorID","medicationLogId"],"sourceRoot":""}